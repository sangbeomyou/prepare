{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cvcv5\\\\OneDrive\\\\desktop\\\\sangbeom study\\\\react-app\\\\prepare\\\\front\\\\components\\\\LoginForm.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nconst ButtonWrapper = styled.div`\n  margin-top: 10px;\n`;\nconst FormWrapper = styled(Form)`\n  padding: 10px;\n`;\n\nconst LoginForm = ({\n  setIsLoggedIn\n}) => {\n  const {\n    0: id,\n    1: setId\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const onChangeId = useCallback(e => {\n    setId(e.target.value);\n  }, []);\n  const onChangePassword = useCallback(e => {\n    setPassword(e.target.value);\n  }, []);\n  const onsubmitForm = useCallback(() => {\n    console.log(id, password);\n    setIsLoggedIn(true);\n  }, [id, password]); // const style = useMemo(() => ({marginTop:10}),[]);\n\n  return __jsx(FormWrapper, {\n    onFinish: onsubmitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }), __jsx(Input, {\n    name: \"user-id\",\n    value: id,\n    onChange: onChangeId,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), __jsx(Input, {\n    name: \"user-password\",\n    type: \"password\",\n    value: password,\n    onChange: onChangePassword,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  })), __jsx(ButtonWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"\\uB85C\\uADF8\\uC778\"), __jsx(Link, {\n    href: \"/singup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 38\n    }\n  }, __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 41\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")))));\n};\n\nLoginForm.propTypes = {\n  setIsLoggedIn: PropTypes.node.isRequired\n};\nexport default LoginForm;","map":{"version":3,"sources":["C:/Users/cvcv5/OneDrive/desktop/sangbeom study/react-app/prepare/front/components/LoginForm.js"],"names":["React","useState","useCallback","Form","Input","Button","PropTypes","Link","styled","ButtonWrapper","div","FormWrapper","LoginForm","setIsLoggedIn","id","setId","password","setPassword","onChangeId","e","target","value","onChangePassword","onsubmitForm","console","log","propTypes","node","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA4C,OAA5C;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,aAAa,GAAGD,MAAM,CAACE,GAAI;;CAAjC;AAIA,MAAMC,WAAW,GAAGH,MAAM,CAACL,IAAD,CAAO;;CAAjC;;AAIA,MAAMS,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAqB;AACnC,QAAM;AAAA,OAACC,EAAD;AAAA,OAAKC;AAAL,MAAcd,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAM;AAAA,OAACe,QAAD;AAAA,OAAWC;AAAX,MAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMiB,UAAU,GAAGhB,WAAW,CAAEiB,CAAD,IAAO;AAC9BJ,IAAAA,KAAK,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAL;AACH,GAFyB,EAEvB,EAFuB,CAA9B;AAIA,QAAMC,gBAAgB,GAAGpB,WAAW,CAAEiB,CAAD,IAAO;AACpCF,IAAAA,WAAW,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACH,GAF+B,EAE7B,EAF6B,CAApC;AAIA,QAAME,YAAY,GAAGrB,WAAW,CAAC,MAAM;AACnCsB,IAAAA,OAAO,CAACC,GAAR,CAAYX,EAAZ,EAAgBE,QAAhB;AACAH,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GAH+B,EAG9B,CAACC,EAAD,EAAKE,QAAL,CAH8B,CAAhC,CAZmC,CAiBnC;;AAEA,SACI,MAAC,WAAD;AAAa,IAAA,QAAQ,EAAEO,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAsB,IAAA,KAAK,EAAET,EAA7B;AAAiC,IAAA,QAAQ,EAAEI,UAA3C;AAAuD,IAAA,QAAQ,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,eAAZ;AAA4B,IAAA,IAAI,EAAC,UAAjC;AACI,IAAA,KAAK,EAAEF,QADX;AACqB,IAAA,QAAQ,EAAEM,gBAD/B;AACiD,IAAA,QAAQ,MADzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CANJ,EAYI,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAyC,IAAA,OAAO,EAAE,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAG,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAH,CAArB,CAFJ,CAZJ,CADJ;AAmBH,CAtCD;;AAwCAV,SAAS,CAACc,SAAV,GAAsB;AAClBb,EAAAA,aAAa,EAAEP,SAAS,CAACqB,IAAV,CAAeC;AADZ,CAAtB;AAGA,eAAehB,SAAf","sourcesContent":["import React, { useState, useCallback} from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport Link from 'next/link';\r\nimport styled from 'styled-components';\r\n\r\nconst ButtonWrapper = styled.div`\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst FormWrapper = styled(Form)`\r\n  padding: 10px;\r\n`;\r\n\r\nconst LoginForm = ({setIsLoggedIn}) => {\r\n    const [id, setId] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const onChangeId = useCallback((e) => {\r\n            setId(e.target.value); \r\n        }, []);\r\n\r\n    const onChangePassword = useCallback((e) => {\r\n            setPassword(e.target.value); \r\n        }, []);\r\n\r\n    const onsubmitForm = useCallback(() => {\r\n        console.log(id, password);\r\n        setIsLoggedIn(true);\r\n    },[id, password]);\r\n\r\n    // const style = useMemo(() => ({marginTop:10}),[]);\r\n\r\n    return(\r\n        <FormWrapper onFinish={onsubmitForm}>\r\n            <div>\r\n                <label htmlFor=\"user-id\">아이디</label>\r\n                <br />\r\n                <Input name=\"user-id\" value={id} onChange={onChangeId} required />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"user-password\">비밀번호</label>\r\n                <br />\r\n                <Input name=\"user-password\" type=\"password\"\r\n                    value={password} onChange={onChangePassword} required />\r\n            </div>\r\n            <ButtonWrapper>\r\n                <Button type=\"primary\" htmlType=\"submit\" loading={false}>로그인</Button>\r\n                <Link href=\"/singup\"><a><Button>회원가입</Button></a></Link>\r\n            </ButtonWrapper>\r\n        </FormWrapper>\r\n    );\r\n};\r\n\r\nLoginForm.propTypes = {\r\n    setIsLoggedIn: PropTypes.node.isRequired,\r\n};\r\nexport default LoginForm"]},"metadata":{},"sourceType":"module"}